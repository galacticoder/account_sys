            # send_email(sender_email=sender_email, sender_password=sender_pass, recipient_email=email, subject=sub, )
            with open(f"{username}_key.key",'r') as ver_key:
                contents = ver_key.read()
            uri = pyotp.totp.TOTP(contents).provisioning_uri( 
            name=username, 
            issuer_name='GalacticCoder')
            shutil.move(f"{username}_key.key", user_key_path+f'\\{username}_key.key')
            qrcode.make(uri).save(f"{username}_qr.png")
            shutil.move(f"{username}_qr.png", qr+f'\\{username}_qr.png')

            # create an email message object
            message = EmailMessage()
  
# open image as a binary file and read the contents
            with open('image.jpg', 'rb') as file:
                image_data = file.read()
  
            message.set_content("Email from Python with image attachment")
# attach image to email
            message.add_attachment(image_data, maintype='image', subtype=imghdr.what(None, image_data))
  

            
            totp = pyotp.TOTP(contents)
            verification = totp.verify(input(("Enter the Code : ")))

            if verification:
                print("Verification successful")
                encry_compr(key, data_to_process)
                return
            else:
                print("Verification unsuccessful")
                if os.path.getsize(file_path) == 0:
                    return
                else:
                    encry_compr(key, data_to_process)
                    return
